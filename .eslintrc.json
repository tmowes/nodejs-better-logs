{
  "env": {
    "es2021": true,
    "node": true
  },
  "extends": [
    "airbnb-base",
    "plugin:radar/recommended",
    "plugin:@typescript-eslint/recommended",
    "prettier",
    "plugin:prettier/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 12,
    "sourceType": "module"
  },
  "plugins": [
    "radar",
    "@typescript-eslint",
    "eslint-plugin-import-helpers",
    "prettier"
  ],
  "rules": {
    "prettier/prettier": [
      "error",
      {
        "singleQuote": true,
        "trailingComma": "all",
        "arrowParens": "avoid",
        "tabWidth": 2,
        "printWidth": 98,
        "semi": false
      }
    ],
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "ts": "never"
      }
    ],
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "arrow-body-style": [
      "error",
      "as-needed"
    ],
    "no-unused-expressions": "off",
    "no-use-before-define": "off",
    "no-unneeded-ternary": "error",
    "no-unused-vars": "off",
    "prefer-template": "error",
    "@typescript-eslint/camelcase": "off",
    "@typescript-eslint/no-useless-constructor": "error",
    "@typescript-eslint/indent": "off",
    "@typescript-eslint/no-use-before-define": "off",
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_$|[iI]gnored"
      }
    ],
    "@typescript-eslint/no-empty-interface": [
      "error",
      {
        "allowSingleExtends": true
      }
    ],
    "@typescript-eslint/no-shadow": [
      "error"
    ],
    "camelcase": "off",
    "import/no-unresolved": "error",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "interface",
        "format": [
          "PascalCase"
        ],
        "custom": {
          "regex": "^[A-Z]",
          "match": true
        }
      }
    ],
    "class-methods-use-this": "off",
    "import/prefer-default-export": "off",
    "no-shadow": "off",
    "no-console": [
      "off",
      {
        "allow": [
          "warn",
          "error"
        ]
      }
    ],
    "implicit-arrow-linebreak": "off",
    "no-useless-constructor": "off",
    "no-empty-function": "off",
    "lines-between-class-members": "off",
    "no-plusplus": [
      "error",
      {
        "allowForLoopAfterthoughts": true
      }
    ],
    "no-param-reassign": [
      "error",
      {
        "props": true,
        "ignorePropertyModificationsForRegex": [
          "^draft",
          "^req"
        ]
      }
    ],
    "import/no-duplicates": "off",
    "import/no-named-as-default": "off",
    "import/no-useless-path-segments": [
      "error",
      {
        "noUselessIndex": true
      }
    ],
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": [
          "**/test.ts?(x)",
          "**/*.test.ts?(x)",
          "**/spec.ts?(x)",
          "**/*.spec.ts?(x)",
          "**/stories.ts?(x)",
          "**/*.stories.ts?(x)",
          "**/mocks/**/*",
          "**/utils/tests/**/*"
        ]
      }
    ],
    "import-helpers/order-imports": [
      "warn",
      {
        "newlinesBetween": "always",
        "groups": [
          [
            "/^next/"
          ],
          "module",
          [
            "/^@(assets|common|components|constants|contexts|hooks|mocks|pages|routes|services|styles|utils|shared|store)/",
            "/^~/"
          ],
          [
            "parent",
            "sibling"
          ],
          "index"
        ],
        "alphabetize": {
          "order": "ignore",
          "ignoreCase": true
        }
      }
    ],
    "import/no-anonymous-default-export": [
      "error",
      {
        "allowArray": true,
        "allowArrowFunction": false,
        "allowAnonymousClass": false,
        "allowAnonymousFunction": false,
        "allowCallExpression": true,
        "allowLiteral": true,
        "allowObject": true
      }
    ]
  },
  "settings": {
    "import/resolver": {
      "typescript": {}
    }
  }
}
